return {
	-- "stevearc/conform.nvim",
	-- dependencies = { "mason.nvim" },
	-- lazy = true,
	-- event = { "BufWritePre" },
	-- cmd = { "ConformInfo" },
	-- keys = {
	-- 	-- {
	-- 	-- 	"<leader>f",
	-- 	-- 	function()
	-- 	-- 		require("conform").format({ async = true, lsp_format = "fallback" })
	-- 	-- 	end,
	-- 	-- 	mode = "",
	-- 	-- 	desc = "[F]ormat buffer",
	-- 	-- },
	-- },
	-- opts = {
	-- 	format_on_save = {
	-- 		-- These options will be passed to conform.format()
	-- 		timeout_ms = 500,
	-- 		lsp_format = "fallback",
	-- 	},
	-- 	-- notify_on_error = false,
	-- 	-- format_on_save = function(bufnr)
	-- 	-- 	-- Disable "format_on_save lsp_fallback" for languages that don't
	-- 	-- 	-- have a well standardized coding style. You can add additional
	-- 	-- 	-- languages here or re-enable it for the disabled ones.
	-- 	-- 	local disable_filetypes = { c = true, cpp = true }
	-- 	-- 	local lsp_format_opt
	-- 	-- 	if disable_filetypes[vim.bo[bufnr].filetype] then
	-- 	-- 		lsp_format_opt = "never"
	-- 	-- 	else
	-- 	-- 		lsp_format_opt = "fallback"
	-- 	-- 	end
	-- 	-- 	return {
	-- 	-- 		timeout_ms = 500,
	-- 	-- 		lsp_format = lsp_format_opt,
	-- 	-- 	}
	-- 	-- end,
	-- 	formatters_by_ft = {
	-- 		lua = { "stylua" },
	-- 		python = { "ruff" },
	-- 		yaml = { "yamlls" },
	-- 		csharp = { "csharp_ls" },
	-- 		cpp = { "clang_format" },
	-- 		h = { "clang_format" },
	-- 	},
	-- },
}
